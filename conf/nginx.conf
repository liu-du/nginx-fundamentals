user www-data;

# Spwan as many worker process as there are cpu cores
worker_processes auto;

events {
    # Each worker is allowed to handle a maximum of 1024 concurrent connections
    worker_connections 1024;
}


http {

    include mime.types;
    access_log /var/log/nginx/access.log;

    # 1. Buffering
    # Buffer size for POST submissions
    client_body_buffer_size 16K; # allocate 16K in RAM for every incoming POST request
    client_max_body_size 8M; # send 413 "Request Entity too large" if POST reqeust boday > 8M

    # Buffer size for Headers
    client_header_buffer_size 1k; # allocate 1K for each incoming request header

    # Max time to receive client headers/body
    client_body_timeout 12;
    client_header_timeout 12;

    # Max time to keep a connection open for
    keepalive_timeout 15;

    # Max time for the client accept/receive a response
    send_timeout 10;

    # Skip buffering for static files
    sendfile on;

    # Optimise sendfile packets
    tcp_nopush on;

    server {
        listen 80;
        server_name localhost;

        root /app/demo;

        # Use index.php as index if it exists, otherwise fall back to index.html
        index index.php index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
            # Pass php requests to the php-fpm service (via FastCGI protocol)
            include fastcgi.conf;
            fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        }

    }

}